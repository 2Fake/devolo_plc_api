name: Python package

on: [push]

jobs:
  format:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
      - name: Set up Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --no-binary=mypy mypy
      - name: Check formatting
        uses: pre-commit/action@v3.0.1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
      - name: Set up Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: "3.9"
      - name: Lint with ruff
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff
          ruff check --output-format=github devolo_plc_api scripts
          ruff check --output-format=github --exit-zero tests
      - name: Lint with mypy
        run: |
          python -m pip install . mypy types-protobuf
          mypy devolo_plc_api
          mypy tests || true

  test:
    name: Test with Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.5.0
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
          check-latest: true
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test]
      - name: Test with pytest
        run: |
          pytest --cov=devolo_plc_api --cov-report=xml
      - name: Preserve coverage
        uses: actions/upload-artifact@v4.6.2
        if: matrix.python-version == '3.9'
        with:
          name: coverage
          path: coverage.xml

  coverage:
    name: Upload coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4.2.2
      - name: Set up Python
        uses: actions/setup-python@v5.5.0
        with:
          python-version: "3.9"
      - name: Download coverage
        uses: actions/download-artifact@v4.2.1
        with:
          name: coverage
      - name: Coveralls
        uses: coverallsapp/github-action@v2.3.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Clean up coverage
        uses: geekyeggo/delete-artifact@v5.1.0
        with:
          name: coverage
