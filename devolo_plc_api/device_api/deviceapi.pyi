"""
@generated by stubgen.  Do not edit manually!
isort:skip_file
"""
from __future__ import annotations
from ..clients.protobuf import Protobuf
from httpx import AsyncClient as AsyncClient
from typing import Any

class DeviceApi(Protobuf):
    features: list[str]
    password: str
    def __init__(self, ip: str, session: AsyncClient, info: dict[str, Any]) -> None: ...
    async def async_get_led_setting(self) -> dict[str, str]: ...
    async def async_set_led_setting(self, enable: bool) -> bool: ...
    async def async_get_wifi_repeated_access_points(self) -> dict[str, list]: ...
    async def async_start_wps_clone(self) -> bool: ...
    async def async_factory_reset(self) -> bool: ...
    async def async_restart(self) -> bool: ...
    async def async_uptime(self) -> int: ...
    async def async_check_firmware_available(self) -> dict[str, str]: ...
    async def async_start_firmware_update(self) -> bool: ...
    async def async_get_wifi_connected_station(self) -> dict[str, list]: ...
    async def async_get_wifi_guest_access(self) -> dict[str, bool | int | str]: ...
    async def async_set_wifi_guest_access(self, enable: bool, duration: int = ...) -> bool: ...
    async def async_get_wifi_neighbor_access_points(self) -> dict[str, list]: ...
    async def async_start_wps(self) -> bool: ...
    def get_led_setting(self) -> dict[str, str]: ...
    def set_led_setting(self, enable: bool) -> bool: ...
    def get_wifi_repeated_access_points(self) -> dict[str, list]: ...
    def start_wps_clone(self) -> bool: ...
    def factory_reset(self) -> bool: ...
    def restart(self) -> bool: ...
    def uptime(self) -> int: ...
    def check_firmware_available(self) -> dict[str, str]: ...
    def start_firmware_update(self) -> bool: ...
    def get_wifi_connected_station(self) -> dict[str, list]: ...
    def get_wifi_guest_access(self) -> dict[str, bool | int | str]: ...
    def set_wifi_guest_access(self, enable: bool, duration: int = ...) -> bool: ...
    def get_wifi_neighbor_access_points(self) -> dict[str, list]: ...
    def start_wps(self) -> bool: ...
