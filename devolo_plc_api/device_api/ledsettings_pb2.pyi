"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class LedSettingsGet(google.protobuf.message.Message):
    """
    Get current LED settings
    Use GET, no payload required
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Ledstate:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LedstateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LedSettingsGet._Ledstate.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LED_ON: LedSettingsGet._Ledstate.ValueType  # 0
        LED_OFF: LedSettingsGet._Ledstate.ValueType  # 1
    class Ledstate(_Ledstate, metaclass=_LedstateEnumTypeWrapper):
        pass

    LED_ON: LedSettingsGet.Ledstate.ValueType  # 0
    LED_OFF: LedSettingsGet.Ledstate.ValueType  # 1

    STATE_FIELD_NUMBER: builtins.int
    state: global___LedSettingsGet.Ledstate.ValueType
    def __init__(self,
        *,
        state: global___LedSettingsGet.Ledstate.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["state",b"state"]) -> None: ...
global___LedSettingsGet = LedSettingsGet

class LedSettingsSet(google.protobuf.message.Message):
    """
    Set new LED settings
    Use http POST with this message
    Backend will answer with LedSettingsSetResponse
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Ledstate:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _LedstateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LedSettingsSet._Ledstate.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LED_ON: LedSettingsSet._Ledstate.ValueType  # 0
        LED_OFF: LedSettingsSet._Ledstate.ValueType  # 1
    class Ledstate(_Ledstate, metaclass=_LedstateEnumTypeWrapper):
        pass

    LED_ON: LedSettingsSet.Ledstate.ValueType  # 0
    LED_OFF: LedSettingsSet.Ledstate.ValueType  # 1

    STATE_FIELD_NUMBER: builtins.int
    state: global___LedSettingsSet.Ledstate.ValueType
    def __init__(self,
        *,
        state: global___LedSettingsSet.Ledstate.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["state",b"state"]) -> None: ...
global___LedSettingsSet = LedSettingsSet

class LedSettingsSetResponse(google.protobuf.message.Message):
    """
    This will be returned after LedSettingsSet
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Result:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ResultEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LedSettingsSetResponse._Result.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SUCCESS: LedSettingsSetResponse._Result.ValueType  # 0
        UNKNOWN_ERROR: LedSettingsSetResponse._Result.ValueType  # 255
    class Result(_Result, metaclass=_ResultEnumTypeWrapper):
        pass

    SUCCESS: LedSettingsSetResponse.Result.ValueType  # 0
    UNKNOWN_ERROR: LedSettingsSetResponse.Result.ValueType  # 255

    RESULT_FIELD_NUMBER: builtins.int
    result: global___LedSettingsSetResponse.Result.ValueType
    """contains the result of setting the LED state"""

    def __init__(self,
        *,
        result: global___LedSettingsSetResponse.Result.ValueType = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["result",b"result"]) -> None: ...
global___LedSettingsSetResponse = LedSettingsSetResponse
